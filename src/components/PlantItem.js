/* ----------------------------------------- */
/*            Section des imports            */
/* ----------------------------------------- */
// on importe le copmposant pour l'ensoleillement
import CareScale from "./CareScale";

// on importe le style liÃ© Ã  ce composant
import "../styles/PlantItem.css";

/* -------------------------------------------- */
/*            Gestion des Ã©venements            */
/* -------------------------------------------- */
// on dÃ©clare la fonction liÃ©e Ã  l'Ã©venement en camelCase
function handleClick(event) {
  // alert(`Vous voulez acheter 1 ${plantName} ? TrÃ¨s bon choix ðŸŒ±âœ¨`);
  // on peut utiliser les fonctions suivantes
  // event.stopPropagation();
  // event.preventDefault();
  console.log("Ceci est mon Ã©vÃ¨nement :", event);
}

/* ------------------------------------------- */
/*            CrÃ©ation du composant            */
/* ------------------------------------------- */

// crÃ©ation du composant PlantItem
function PlantItem({ name, cover, light, water, price }) {
  // on dÃ©clare l'Ã©venement Ã  attendre et lui passe la fonction Ã  appeler
  // si on  veut passer un argument Ã  la fonction du cloick on Ã©crit :
  // {()=>handleClick(name)}
  return (
    <li className="lmj-plant-item">
      <span className="lmj-plant-price">{price}â‚¬</span>
      <span>
        <img
          src={cover}
          className="lmj-plant-item-cover"
          alt={"Photo d'une plante : " + name}
        />
      </span>
      {name}
      {/* {plant.isBestSale && <div className="lmj-sales">Soldes</div>} */}
      <CareScale careType="water" scaleValue={water} />
      <CareScale careType="light" scaleValue={light} />
      <div className="test">
        <div className="test__loader"></div>
      </div>
    </li>
  );
}

/* ----------------------------------------- */
/*            Section des exports            */
/* ----------------------------------------- */
// on exporte le composant
export default PlantItem;
